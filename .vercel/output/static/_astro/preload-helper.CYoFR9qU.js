const d="modulepreload",v=function(i){return"/"+i},f={},y=function(i,l,h){let a=Promise.resolve();if(l&&l.length>0){const r=document.getElementsByTagName("link"),n=document.querySelector("meta[property=csp-nonce]"),u=n?.nonce||n?.getAttribute("nonce");a=Promise.all(l.map(e=>{if(e=v(e),e in f)return;f[e]=!0;const o=e.endsWith(".css"),m=o?'[rel="stylesheet"]':"";if(h)for(let s=r.length-1;s>=0;s--){const c=r[s];if(c.href===e&&(!o||c.rel==="stylesheet"))return}else if(document.querySelector(`link[href="${e}"]${m}`))return;const t=document.createElement("link");if(t.rel=o?"stylesheet":d,o||(t.as="script",t.crossOrigin=""),t.href=e,u&&t.setAttribute("nonce",u),document.head.appendChild(t),o)return new Promise((s,c)=>{t.addEventListener("load",s),t.addEventListener("error",()=>c(new Error(`Unable to preload CSS for ${e}`)))})}))}return a.then(()=>i()).catch(r=>{const n=new Event("vite:preloadError",{cancelable:!0});if(n.payload=r,window.dispatchEvent(n),!n.defaultPrevented)throw r})};export{y as _};
